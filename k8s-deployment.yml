apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: student-management-system-1
  labels:
    name: student-management-system-1
spec:
  ports:
    - nodePort: 30163 #make the service available to network request from external client
      port: 9095 # The port that the service is running on in the cluster
      targetPort: 9095 # The port exposed by the service
      protocol: TCP
  selector:
    app: student-management-system-1
  type: NodePort # Type of the service.and which expose the application on a port across a each of your nodes

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-management-system-1
spec:
  selector:
    matchLabels:
      app: student-management-system-1
  replicas: 1
  template:
    metadata:
      labels:
        app: student-management-system-1
    spec:
      containers:
        - name: student-management-system-1
          image: student-management-system-1:2.0  # Corrected image name and tag
          imagePullPolicy: IfNotPresent  # Changed to  pull the image
          ports:
            - containerPort: 9095
          env:  # Setting Environmental variable
          - name: DB_HOST  #Setting Database host address from configMap
            valueFrom:
              configMapKeyRef:
                name: db-config  # name of configMap
                key: host
          - name: DB_NAME #Setting Database username from Secret
            valueFrom:
              configMapKeyRef:
                name: db-config
                key: name
          - name: DB_USERNAME #Setting Database username from Secret
            valueFrom:
              secretKeyRef:
                name: db-credentials #Secret Name
                key: username
          - name: DB_PASSWORD #Setting Database password from Secret
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
